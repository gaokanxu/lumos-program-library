#!/usr/bin/env bash
#
# Patches the SPL crates for developing against a local lumos monorepo
#

lumos_dir=$1
if [[ -z $lumos_dir ]]; then
  echo "Usage: $0 <path-to-lumos-monorepo>"
  exit 1
fi

workspace_crates=(
  Cargo.toml
)

if [[ ! -r "$lumos_dir"/scripts/read-cargo-variable.sh ]]; then
  echo "$lumos_dir is not a path to the lumos monorepo"
  exit 1
fi

set -e

lumos_dir=$(cd "$lumos_dir" && pwd)
cd "$(dirname "$0")"
project_root=$(pwd)

source "$lumos_dir"/scripts/read-cargo-variable.sh

# The toolchain file only exists in version >= 1.15
toolchain_file="$lumos_dir"/rust-toolchain.toml
if [[ -f "$toolchain_file" ]]; then
  cp "$toolchain_file" .
fi

# only add exclude rule when lumos root is under spl root
if echo "$lumos_dir" | grep "^$project_root" > /dev/null; then
  echo "Excluding $lumos_dir from workspace"
  echo
  for crate in "${workspace_crates[@]}"; do
    if grep -q "exclude.*$lumos_dir" "$crate"; then
      echo "$crate is already patched"
    else
      sed -i'' "$crate" -e "/exclude/a \ \ \"$lumos_dir\","
    fi
  done
fi

# get version from Cargo.toml first. if it is empty, get it from other places.
lumos_ver="$(readCargoVariable version "$lumos_dir"/Cargo.toml)"
lumos_ver=${lumos_ver:-$(readCargoVariable version "$lumos_dir"/sdk/Cargo.toml)}

crates_map=()
crates_map+=("lumos-account-decoder account-decoder")
crates_map+=("lumos-banks-client banks-client")
crates_map+=("lumos-banks-interface banks-interface")
crates_map+=("lumos-banks-server banks-server")
crates_map+=("lumos-bloom bloom")
crates_map+=("lumos-bucket-map bucket_map")
crates_map+=("lumos-clap-utils clap-utils")
crates_map+=("lumos-clap-v3-utils clap-v3-utils")
crates_map+=("lumos-cli-config cli-config")
crates_map+=("lumos-cli-output cli-output")
crates_map+=("lumos-client client")
crates_map+=("lumos-connection-cache connection-cache")
crates_map+=("lumos-core core")
crates_map+=("lumos-entry entry")
crates_map+=("lumos-faucet faucet")
crates_map+=("lumos-frozen-abi frozen-abi")
crates_map+=("lumos-frozen-abi-macro frozen-abi/macro")
crates_map+=("agave-geyser-plugin-interface geyser-plugin-interface")
crates_map+=("lumos-geyser-plugin-manager geyser-plugin-manager")
crates_map+=("lumos-gossip gossip")
crates_map+=("lumos-ledger ledger")
crates_map+=("lumos-logger logger")
crates_map+=("lumos-measure measure")
crates_map+=("lumos-merkle-tree merkle-tree")
crates_map+=("lumos-metrics metrics")
crates_map+=("lumos-net-utils net-utils")
crates_map+=("lumos-perf perf")
crates_map+=("lumos-poh poh")
crates_map+=("lumos-program-runtime program-runtime")
crates_map+=("lumos-program-test program-test")
crates_map+=("lumos-address-lookup-table-program programs/address-lookup-table")
crates_map+=("lumos-bpf-loader-program programs/bpf_loader")
crates_map+=("lumos-compute-budget-program programs/compute-budget")
crates_map+=("lumos-config-program programs/config")
crates_map+=("lumos-stake-program programs/stake")
crates_map+=("lumos-vote-program programs/vote")
crates_map+=("lumos-zk-token-proof-program programs/zk-token-proof")
crates_map+=("lumos-pubsub-client pubsub-client")
crates_map+=("lumos-quic-client quic-client")
crates_map+=("lumos-rayon-threadlimit rayon-threadlimit")
crates_map+=("lumos-remote-wallet remote-wallet")
crates_map+=("lumos-rpc rpc")
crates_map+=("lumos-rpc-client rpc-client")
crates_map+=("lumos-rpc-client-api rpc-client-api")
crates_map+=("lumos-rpc-client-nonce-utils rpc-client-nonce-utils")
crates_map+=("lumos-runtime runtime")
crates_map+=("lumos-sdk sdk")
crates_map+=("lumos-sdk-macro sdk/macro")
crates_map+=("lumos-program sdk/program")
crates_map+=("lumos-send-transaction-service send-transaction-service")
crates_map+=("lumos-storage-bigtable storage-bigtable")
crates_map+=("lumos-storage-proto storage-proto")
crates_map+=("lumos-streamer streamer")
crates_map+=("lumos-test-validator test-validator")
crates_map+=("lumos-thin-client thin-client")
crates_map+=("lumos-tpu-client tpu-client")
crates_map+=("lumos-transaction-status transaction-status")
crates_map+=("lumos-udp-client udp-client")
crates_map+=("lumos-version version")
crates_map+=("lumos-zk-token-sdk zk-token-sdk")
crates_map+=("lumos-zk-sdk zk-sdk")
crates_map+=("lumos-curve25519 curves/curve25519")

patch_crates=()
for map_entry in "${crates_map[@]}"; do
  read -r crate_name crate_path <<<"$map_entry"
  full_path="$lumos_dir/$crate_path"
  if [[ -r "$full_path/Cargo.toml" ]]; then
    patch_crates+=("$crate_name = { path = \"$full_path\" }")
  fi
done

echo "Patching in $lumos_ver from $lumos_dir"
echo
for crate in "${workspace_crates[@]}"; do
  if grep -q "# The following entries are auto-generated by $0" "$crate"; then
    echo "$crate is already patched"
  else
    if ! grep -q '\[patch.crates-io\]' "$crate"; then
      echo "[patch.crates-io]" >> "$crate"
    fi
    cat >> "$crate" <<PATCH
# The following entries are auto-generated by $0
$(printf "%s\n" "${patch_crates[@]}")
PATCH
  fi
done

./update-lumos-dependencies.sh "$lumos_ver"
